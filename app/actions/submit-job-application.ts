"use server"

import { createClient } from "@/lib/supabase/server"

export async function submitJobApplication(formData: FormData) {
  const name = formData.get("name") as string
  const phone = formData.get("phone") as string
  const email = formData.get("email") as string
  const city = formData.get("city") as string
  const age = formData.get("age") as string
  const experience = formData.get("experience") as string
  const message = formData.get("message") as string

  if (!name || !phone || !email || !city || !age) {
    return { success: false, error: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è" }
  }

  try {
    // Save to Supabase
    const supabase = await createClient()
    const { error: dbError } = await supabase.from("sever_contact_requests").insert({
      name,
      phone,
      email,
      message: `–û—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é\n–ì–æ—Ä–æ–¥: ${city}\n–í–æ–∑—Ä–∞—Å—Ç: ${age}\n–û–ø—ã—Ç: ${experience || "–ù–µ —É–∫–∞–∑–∞–Ω"}\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: ${message || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}`,
      source: "vacancy_application",
      status: "new",
    })

    if (dbError) {
      console.error("[v0] Database error:", dbError)
      return { success: false, error: "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö" }
    }

    // Send to Telegram
    const telegramToken = "6465481792:AAFvJieglOSfVL3YUSJh92_k5USt4RvzrDc"
    const chatIds = ["120705872"]

    const telegramMessage = `üíº –ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é!

üë§ –ò–º—è: ${name}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}
üìß Email: ${email}
üèôÔ∏è –ì–æ—Ä–æ–¥: ${city}
üéÇ –í–æ–∑—Ä–∞—Å—Ç: ${age}

üìù –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:
${experience || "–ù–µ —É–∫–∞–∑–∞–Ω"}

üí¨ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
${message || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}`

    for (const chatId of chatIds) {
      const response = await fetch(`https://api.telegram.org/bot${telegramToken}/sendMessage`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          chat_id: chatId,
          text: telegramMessage,
        }),
      })

      if (!response.ok) {
        console.error("[v0] Telegram API error:", await response.text())
      }
    }

    return { success: true }
  } catch (error) {
    console.error("[v0] Error submitting job application:", error)
    return { success: false, error: "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ." }
  }
}
